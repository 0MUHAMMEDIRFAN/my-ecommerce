<div class="min-vh-100 d-flex align-items-center py-5">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-lg-5 col-md-7">
                <div class="card border-0 shadow-lg">
                    <div class="card-body p-5">
                        <div class="text-center mb-4">
                            <i class="fas fa-user-circle fa-3x text-primary mb-3"></i>
                            <h2 class="fw-bold">Welcome Back</h2>
                            <p class="text-muted">Sign in to your account to continue</p>
                        </div>

                        {{#if status.state}}
                        <div class="alert alert-success alert-dismissible fade show" role="alert">
                            <i class="fas fa-check-circle me-2"></i>
                            <strong>{{status.message}}</strong>
                            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                        </div>
                        {{/if}}
                        
                        {{#if status}}
                        {{#unless status.state}}
                        <div class="alert alert-danger alert-dismissible fade show" role="alert">
                            <i class="fas fa-exclamation-circle me-2"></i>
                            <strong>{{status.message}}</strong>
                            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                        </div>
                        {{/unless}}
                        {{/if}}

                        <form action="/login" id="loginForm" method="POST" novalidate>
                            <div class="mb-3">
                                <label for="email" class="form-label">
                                    <i class="fas fa-envelope me-2"></i>Email Address
                                </label>
                                <input type="email" class="form-control form-control-lg" name="username" id="email" 
                                       placeholder="Enter your email address" required autofocus>
                                <div class="invalid-feedback">
                                    Please provide a valid email address.
                                </div>
                            </div>

                            <div class="mb-4">
                                <label for="password" class="form-label">
                                    <i class="fas fa-lock me-2"></i>Password
                                </label>
                                <div class="input-group">
                                    <input type="password" class="form-control form-control-lg" name="password" 
                                           id="password" placeholder="Enter your password" required>
                                    <button class="btn btn-outline-secondary password-toggle-btn" type="button" onclick="togglePassword()">
                                        <i class="fas fa-eye" id="passwordToggleIcon"></i>
                                    </button>
                                </div>
                                <div class="invalid-feedback">
                                    Password is required.
                                </div>
                            </div>

                            <div class="d-flex justify-content-between align-items-center mb-4">
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" name="rememberMe" id="rememberMe">
                                    <label class="form-check-label" for="rememberMe">
                                        Remember me
                                    </label>
                                </div>
                                <a href="/forgot-password" class="text-decoration-none">Forgot password?</a>
                            </div>

                            <button type="submit" class="btn btn-primary btn-lg w-100 mb-3" id="loginBtn">
                                <span class="btn-text">
                                    <i class="fas fa-sign-in-alt me-2"></i>Sign In
                                </span>
                                <span class="btn-loading d-none">
                                    <span class="spinner"></span>Signing in...
                                </span>
                            </button>
                        </form>

                        <div class="text-center">
                            <div class="divider-with-text my-4">
                                <span class="bg-white px-3 text-muted">or</span>
                            </div>
                            
                            <p class="text-muted mb-0">
                                Don't have an account? 
                                <a href="/signup" class="fw-bold text-decoration-none">Create one here</a>
                            </p>
                        </div>
                    </div>
                </div>
                
                <!-- Quick Login for Development -->
                <div class="text-center mt-3">
                    <div class="d-flex justify-content-center gap-2">
                        <button class="btn btn-link btn-sm text-muted" onclick="quickTestLogin()" type="button">
                            <i class="fas fa-user me-1"></i>Test User (test@example.com)
                        </button>
                        <button class="btn btn-link btn-sm text-danger" onclick="quickAdminLogin()" type="button">
                            <i class="fas fa-user-shield me-1"></i>Admin (admin@example.com)
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    // Form validation
    document.getElementById('loginForm').addEventListener('submit', function(e) {
        const form = this;
        const email = document.getElementById('email');
        const password = document.getElementById('password');
        const loginBtn = document.getElementById('loginBtn');
        const btnText = loginBtn.querySelector('.btn-text');
        const btnLoading = loginBtn.querySelector('.btn-loading');

        // Reset validation
        form.classList.remove('was-validated');
        let isValid = true;
        
        // Validate email
        if (!email.value || !email.value.includes('@')) {
            email.classList.add('is-invalid');
            isValid = false;
        } else {
            email.classList.remove('is-invalid');
            email.classList.add('is-valid');
        }

        // Validate password
        if (!password.value || password.value.length < 1) {
            password.classList.add('is-invalid');
            isValid = false;
        } else {
            password.classList.remove('is-invalid');
            password.classList.add('is-valid');
        }

        // If validation fails, prevent form submission and reset button
        if (!isValid) {
            e.preventDefault();
            btnText.classList.remove('d-none');
            btnLoading.classList.add('d-none');
            loginBtn.disabled = false;
            return;
        }

        // Show loading state only if validation passes
        btnText.classList.add('d-none');
        btnLoading.classList.remove('d-none');
        loginBtn.disabled = true;
    });

    function togglePassword() {
        const passwordInput = document.getElementById('password');
        const toggleIcon = document.getElementById('passwordToggleIcon');
        
        if (passwordInput.type === 'password') {
            passwordInput.type = 'text';
            toggleIcon.classList.remove('fa-eye');
            toggleIcon.classList.add('fa-eye-slash');
        } else {
            passwordInput.type = 'password';
            toggleIcon.classList.remove('fa-eye-slash');
            toggleIcon.classList.add('fa-eye');
        }
    }

    function quickLogin() {
        // For development purposes
        document.getElementById('email').value = 'test@example.com';
        document.getElementById('password').value = 'password';
    }

    // Add focus effects
    document.querySelectorAll('.form-control').forEach(input => {
        input.addEventListener('focus', function() {
            this.parentElement.classList.add('focused');
        });
        
        input.addEventListener('blur', function() {
            this.parentElement.classList.remove('focused');
        });
    });

    // Quick Admin Login Function
    async function quickAdminLogin() {
        try {
            const response = await fetch('/quick-admin-login', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
            });

            const result = await response.json();
            
            if (result.success) {
                if (typeof showToast === 'function') {
                    showToast('Admin login successful!', 'success');
                } else {
                    alert('Admin login successful!');
                }
                setTimeout(() => {
                    window.location.href = '/admin';
                }, 1000);
            } else {
                if (typeof showToast === 'function') {
                    showToast(result.message, 'danger');
                } else {
                    alert(result.message);
                }
            }
        } catch (error) {
            console.error('Quick admin login error:', error);
            if (typeof showToast === 'function') {
                showToast('Quick admin login failed', 'danger');
            } else {
                alert('Quick admin login failed');
            }
        }
    }

    // Quick Test User Login Function
    async function quickTestLogin() {
        try {
            const response = await fetch('/quick-test-login', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
            });

            const result = await response.json();
            
            if (result.success) {
                if (typeof showToast === 'function') {
                    showToast('Test login successful!', 'success');
                } else {
                    alert('Test login successful!');
                }
                
                if (result.redirect) {
                    window.location.href = result.redirect;
                } else {
                    window.location.href = '/';
                }
            } else {
                if (typeof showToast === 'function') {
                    showToast(result.message, 'danger');
                } else {
                    alert(result.message);
                }
            }
        } catch (error) {
            console.error('Quick test login error:', error);
            if (typeof showToast === 'function') {
                showToast('Quick test login failed', 'danger');
            } else {
                alert('Quick test login failed');
            }
        }
    }

    // Enhanced Quick Login Function - now fills admin credentials
    function quickLogin() {
        console.log("Quick login clicked - filling admin credentials");
        document.getElementById('email').value = 'admin@example.com';
        document.getElementById('password').value = 'admin123';
        document.getElementById('rememberMe').checked = true;
        
        if (typeof showToast === 'function') {
            showToast('Demo credentials filled. Click Sign In to login.', 'info');
        } else {
            alert('Demo credentials filled. Click Sign In to login.');
        }
    }
</script>

<style>
    .divider-with-text {
        position: relative;
        text-align: center;
    }

    .divider-with-text::before {
        content: '';
        position: absolute;
        top: 50%;
        left: 0;
        right: 0;
        height: 1px;
        background: #e9ecef;
        z-index: 1;
    }

    .divider-with-text span {
        position: relative;
        z-index: 2;
    }

    .form-control:focus {
        border-color: var(--primary-color);
        box-shadow: 0 0 0 0.2rem rgba(37, 99, 235, 0.25);
    }

    .form-control.is-valid {
        border-color: var(--success-color);
    }

    .form-control.is-invalid {
        border-color: var(--danger-color);
    }

    .focused {
        transform: scale(1.02);
        transition: transform 0.2s ease;
    }
    
    .password-toggle-btn {
        background-color: #f8f9fa;
        border-color: #dee2e6;
        min-width: 50px;
    }
    
    .password-toggle-btn:hover {
        background-color: #e9ecef;
        border-color: #dee2e6;
    }
    
    .password-toggle-btn:focus {
        box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
    }
</style>